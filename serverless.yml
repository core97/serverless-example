service: serverless-example

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-3
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 29  # Set below API Gateway's 30s limit to prevent timeout issues
  httpApi:
    cors: true
    payload: '2.0'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: '*'

functions:
  bookHandler:
    handler: dist/book/handlers/api/book.handler
    events:
      - httpApi:
          path: /api/books
          method: '*'
      - httpApi:
          path: /api/books/{proxy+}
          method: '*'

  authorHandler:
    handler: dist/author/handlers/api/author.handler
    events:
      - httpApi:
          path: /api/authors
          method: '*'
      - httpApi:
          path: /api/authors/{proxy+}
          method: '*'

  # To add a new handler:
  # 1. Create a new file: src/<module>/presentation/api/<name>.api.ts
  # 2. tsup will automatically compile it to: dist/<module>/handlers/api/<name>.cjs
  # 3. Add a new function here with the httpApi event pattern above

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
    noPrependStageInUrl: true
